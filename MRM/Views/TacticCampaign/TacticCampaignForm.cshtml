@model MRM.ViewModel.TacticCampaignViewModel
@using MRM.ViewModel;


<form id="frmTacticCampaign">
    @Html.HiddenFor(m => m.Id, new { @Value = Model.Id })
    @Html.HiddenFor(m => m.Status, new { @Value = Model.Status })
    @Html.HiddenFor(m => m.MCStartDate, new { @Value = Model.MCStartDate == null ? DateTime.MinValue.ToString("dd MMM yyyy") : Model.MCStartDate.Value.ToString("dd MMM yyyy") })
    @Html.HiddenFor(m => m.MCEndDate, new { @Value = Model.MCEndDate == null ? DateTime.MaxValue.ToString("dd MMM yyyy") : Model.MCEndDate.Value.ToString("dd MMM yyyy") })
    @Html.HiddenFor(m => m.BgSelectUnselect, new { @Value = Model.BgSelectUnselect })
    @Html.HiddenFor(m => m.BlSelectUnselect, new { @Value = Model.BlSelectUnselect })
    @Html.HiddenFor(m => m.ThemeSelectUnselect, new { @Value = Model.ThemeSelectUnselect })
    @Html.HiddenFor(m => m.SegSelectUnselect, new { @Value = Model.SegSelectUnselect })
    @Html.HiddenFor(m => m.GeoSelectUnselect, new { @Value = Model.GeoSelectUnselect })
    @Html.HiddenFor(m => m.IndustrySelectUnselect, new { @Value = Model.IndustrySelectUnselect })
    @Html.HiddenFor(m => m.SubCampaignType, new { @Value = Model.SubCampaignType })
    @if (Model.Status == "Complete")
    {
        @Html.HiddenFor(m => m.MasterCampaign_Id, new { @Value = Model.MasterCampaign_Id })
        @Html.HiddenFor(m => m.ChildCampaign_Id, new { @Value = Model.ChildCampaign_Id })
        @Html.HiddenFor(m => m.JournetStage_Id, new { @Value = Model.JournetStage_Id })
        @Html.HiddenFor(m => m.Name, new { @Value = Model.Name })
        @Html.HiddenFor(m => m.TacticType, new { @Value = Model.TacticType })
    }
    <section class="content-header"></section>
    <section class="content">
        <!-- SELECT2 EXAMPLE -->
        <div class="box box-default">
            <div class="box-header with-border">
            </div>

            <!-- /.box-header -->
            <div class="box-body">
                <div class="row">
                    <fieldset>
                    <legend class="header-color">Tactic
                    </legend>
                    <div class="legend2 text-danger">Note: Mandatory fields is marked with red aestric (*)</div>

                        <div class="row">
                            <div class="col-md-6" id="MC">
                                <div class="form-group">
                                    <label>Master Campaign</label><span class="text-danger">*</span><br />
                                    @Html.DropDownListFor(m => m.MasterCampaign_Id, new SelectList(Model.MasterViewModels, "Id", "Name",
                                    Model.MasterCampaign_Id), "None selected.",
                                    Model.Id != 0 && Model.Status == "Complete" ?
                                    (object)new { disabled = "disabled", @class = "chosen-single form-control" } :
                                    (object)new { @class = "chosen-single form-control" })
                                    <div class="validmsgMastercampaign"></div>
                                </div>
                            </div>
                            <div class="col-md-6" id="SC">
                                <div class="form-group">
                                    <label>Sub Campaign</label><span class="text-danger">*</span><br />
                                    @Html.DropDownListFor(m => m.ChildCampaign_Id, new SelectList(Model.ChildCampaignViewModels, "Id", "Name",
                                    Model.ChildCampaign_Id), "None selected.",
                                    Model.Id != 0 && Model.Status == "Complete" ?
                                    (object)new { disabled = "disabled", @class = "chosen-single form-control" } :
                                    (object)new { @class = "chosen-single form-control" })
                                    <div class="validmsgSubcampaign"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6" id="TT">
                                <div class="form-group">
                                    <label>Tactic Type<span class="text-danger">*</span></label><br />
                                    @Html.DropDownListFor(m => m.TacticType_Id, new SelectList(Model.TacticTypeViewModels, "Id", "Name",
                                        Model.TacticType),
                                        Model.Id != 0 && Model.Status == "Complete" ?
                                            (object)new { disabled = "disabled", @class = "chosen-single form-control" } :
                                            (object)new { @class = "chosen-single form-control", onchange = "ChkCampselection()" })
                                    <div class="validmsgTactictype HideOnsave"></div>
                                </div>
                            </div>
                            <div class="col-md-6" id="JS">
                                <div class="form-group">
                                    <label>Journey Stage</label><span class="text-danger">*</span><br />
                                    @Html.DropDownListFor(m => m.JournetStage_Id, new SelectList(Model.JourneyStageViewModels, "Id", "Name",
                                        Model.JournetStage_Id), "None selected.",
                                        Model.Id != 0 && Model.Status == "Complete" ?
                                            (object)new { disabled = "disabled", @class = "chosen-single form-control" } :
                                            (object)new { @class = "chosen-single form-control", onchange = "ChkCampselection()" })
                                    <div class="validmsgJourneyStage HideOnsave"></div>
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6" id="TN">
                                <div class="form-group">
                                    <label>Tactic Name</label><span class="text-danger">*</span>
                                    @Html.TextBoxFor(m => m.Name, (Model.Id != 0 && Model.Status == "Complete") ?
                                    (object)new { disabled = "disabled", @class = "form-control" } :
                                    (object)new { @class = "form-control ChkCampselection", @maxlength = "80", onkeypress = "return alpha(event,Name)" })
                                    <div class="validmsgtacticname HideOnsave"></div>
                                </div>
                            </div>
                            <div class="col-md-6" id="TDC">
                                <div class="form-group">
                                    <label>Tactic Description & Goals<span class="text-danger">*</span></label>
                                    @Html.TextAreaFor(m => m.TacticDescription,
                                    //(Model.Id != 0 && Model.Status == "Complete") ?
                                    // (object)new { disabled = "disabled", @class = "form-control" } :
                                    (object)new { @class = "form-control ChkCampselection", onkeypress = "return alpha(event,TacticDescription)", @maxlength = "500" })
                                    <div class="validmsgtacticdesc HideOnsave"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Used Case</label>  <br />
                                    @Html.ListBoxFor(m => m.Themes_Id, new MultiSelectList(Model.ThemeViewModels, "Id", "Name", Model.Themes_Id),
                                        //(Model.Id != 0 && Model.Status == "Complete") ?
                                        //    (object)new { disabled = "disabled", @class = "chosen-select form-control" } :
                                        (object)new { @class = "chosen-select form-control ChkCampselection", onchange = "DDLSelectUnselect(this)" })
                                    <a data-next-stage="@(Model.ThemeSelectUnselect==false?"select":"unselect")" data-target-id="Themes_Id" data-select-all="selectunselect" href="javascript:void(0);"> @(Model.ThemeSelectUnselect == false ? "Select All" : "Select None")</a>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="form-group">
                                    <label>Markets</label><span class="text-danger"></span><br />
                                    @Html.ListBoxFor(m => m.Geographys_Id, new MultiSelectList(Model.GeographyViewModels, "Id", "Name", Model.Geographys_Id),
                                        //(Model.Id != 0 && Model.Status == "Complete") ?
                                        //    (object)new { disabled = "disabled", @class = "chosen-select form-control" } :
                                        (object)new { @class = "chosen-select form-control ChkCampselection", onchange = "DDLSelectUnselect(this)" })
                                    @*<a data-next-stage="select" data-target-id="Geographys_Id" data-select-all="selectunselect" href="javascript:void(0);">Select All</a>*@
                                    <a data-next-stage="@(Model.GeoSelectUnselect==false?"select":"unselect")" data-target-id="Geographys_Id" data-select-all="selectunselect" href="javascript:void(0);"> @(Model.GeoSelectUnselect == false ? "Select All" : "Select None")</a>
                                </div>
                                <div class="validmsggeography"></div>
                            </div>
                        </div>

                        <div class="row">

                            <div class="col-md-6" id="SD">
                                <label>Start Date<span class="text-danger lb-sm">*</span></label>
                                <div class="form-group">
                                    <div id="dvStartDate" class="col-md-6 date datealign">
                                        <div class="input-group input-append date">
                                            @Html.TextBoxFor(m => m.StartDate,
                                            //(Model.Id != 0 && Model.Status == "Complete") ?
                                            // (object)new { Value = (Model.StartDate != null ? Model.StartDate.Value.ToString("dd MMM yyyy") : ""), disabled = "disabled", @class = "form-control start-date-cal", @maxlength = "10", @placeholder = "DD Month YYYY" } :
                                            (object)new { Value = (Model.StartDate != null ? Model.StartDate.Value.ToString("dd MMM yyyy") : ""), @class = "form-control start-date-cal DateReadOnly ChkCampselection", @maxlength = "10", @placeholder = "DD Month YYYY", @readonly = "readonly" })
                                            <span class="input-group-addon add-on"><span class="glyphicon glyphicon-calendar add-on startcal ChkCampselection"></span></span>
                                        </div>
                                        <div class="validmsgSdate HideOnsave"></div>
                                    </div>

                                </div>
                            </div>
                            <div class="col-md-6" id="ED">
                                <label>End Date<span class="text-danger lb-sm">*</span></label>
                                <div class="form-group">
                                    <div id="dvEndDate" class="col-md-6 form-group date datealign">
                                        <div class="input-group input-append date">
                                            @Html.TextBoxFor(m => m.EndDate,
                                            //(Model.Id != 0 && Model.Status == "Complete") ?
                                            // (object)new { Value = (Model.EndDate != null ? Model.EndDate.Value.ToString("dd MMM yyyy") : ""), disabled = "disabled", @class = "form-control end-date-cal", @maxlength = "10", @placeholder = "DD Month YYYY" } :
                                            (object)new { Value = (Model.EndDate != null ? Model.EndDate.Value.ToString("dd MMM yyyy") : ""), @class = "form-control end-date-cal DateReadOnly ChkCampselection", @maxlength = "10", @placeholder = "DD Month YYYY", @readonly = "readonly" })
                                            <span class="input-group-addon add-on"><span class="glyphicon glyphicon-calendar add-on endcal ChkCampselection"></span></span>
                                        </div>
                                        <div class="validmsgEdate HideOnsave"></div><div class="validmsgDatecompare"></div>
                                    </div>
                                </div>

                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6"></div>
                            <div class="col-md-6"><div class="validmsgDateMCcompare"></div></div>
                        </div>
                        <div class="row">
                            <div class="col-md-6" id="BG">
                                <div class="form-group">
                                    <label>Business Group<span class="text-danger">*</span></label><br />
                                    @Html.ListBoxFor(m => m.BusinessGroups_Id, new MultiSelectList(Model.BusinessGroupViewModels, "Id", "Name", Model.BusinessGroups_Id),
                                        //(Model.Id != 0 && Model.Status == "Complete") ?
                                        //     (object)new { disabled = "disabled", @class = "chosen-select form-control" } :
                                        (object)new { @class = "chosen-select form-control" })
                                    <a data-next-stage="@(Model.BgSelectUnselect==false?"bgselect":"bgunselect")" data-target-id="BusinessGroups_Id" data-select-all="BGselectunselect" href="javascript:void(0);"> @(Model.BgSelectUnselect == false ? "Select All" : "Select None")</a>
                                    <div class="validmsgbusinesGp HideOnsave"></div>
                                </div>
                            </div>
                            <div class="col-md-6" id="SG">
                                <div class="form-group">
                                    <label>Segment</label><span class="text-danger">*</span><br />
                                    @Html.ListBoxFor(m => m.Segments_Id, new MultiSelectList(Model.SegmentViewModels, "Id", "Name", Model.Segments_Id),
                                        //(Model.Id != 0 && Model.Status == "Complete") ?
                                        //     (object)new { disabled = "disabled", @class = "chosen-select form-control" } :
                                        (object)new { @class = "chosen-select form-control" })
                                    <a data-next-stage="@(Model.SegSelectUnselect==false?"Segselect":"Segunselect")" data-target-id="Segments_Id" data-select-all="Segselectunselect" href="javascript:void(0);"> @(Model.SegSelectUnselect == false ? "Select All" : "Select None")</a>
                                    <div class="validmsgbusinesSegment HideOnsave"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6" id="BL">
                                <div class="form-group">
                                    <label>Business Line</label><span class="text-danger">*</span><br />
                                    @Html.ListBoxFor(m => m.BusinessLines_Id, new MultiSelectList(Model.BusinessLineViewModels, "Id", "Name", Model.BusinessLines_Id),
                                        //(Model.Id != 0 && Model.Status == "Complete") ?
                                        //     (object)new { disabled = "disabled", @class = "chosen-select form-control" } :
                                        (object)new { @class = "chosen-select form-control ChkCampselection", onchange = "DDLSelectUnselect(this)" })
                                    <a data-next-stage="@(Model.BlSelectUnselect==false?"select":"unselect")" data-target-id="BusinessLines_Id" data-select-all="selectunselect" href="javascript:void(0);"> @(Model.BlSelectUnselect == false ? "Select All" : "Select None")</a>
                                    <div class="validmsgbusinesLine HideOnsave"></div>
                                </div>
                            </div>
                            <div class="col-md-6" id="Ind">
                                <div class="form-group">
                                    <label>Industry</label><span class="text-danger Industrymanage-mandate">*</span><br />
                                    @Html.ListBoxFor(m => m.Industries_Id, new MultiSelectList(Model.IndustryViewModels, "Id", "Name", Model.Industries_Id),
                                        //(Model.Id != 0 && Model.Status == "Complete") ?
                                        //     (object)new { disabled = "disabled", @class = "chosen-select form-control" } :
                                        (object)new { @class = "chosen-select form-control ChkCampselection", onchange = "DDLSelectUnselect(this)" })
                                    <a data-next-stage="@(Model.IndustrySelectUnselect==false?"select":"unselect")" data-target-id="Industries_Id" data-select-all="selectunselect" href="javascript:void(0);"> @(Model.IndustrySelectUnselect == false ? "Select All" : "Select None")</a>
                                    <div class="validmsgbusinesIndustry HideOnsave"></div>
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-6" id="Vndr">
                                <div class="form-group">
                                    <label>Vendor</label><span class="text-danger"></span><br />
                                    @Html.TextBoxFor(m => m.Vendor,
                                    //(Model.Id != 0 && Model.Status == "Complete") ?
                                    // (object)new { disabled = "disabled", @class = "form-control" } :
                                    (object)new { @class = "form-control ChkCampselection", @maxlength = "50", onkeypress = "return blockSpecialChar(event)" })
                                    @*@Html.ListBoxFor(m => m.Vendor_Id, new MultiSelectList(Model.VendorViewModels, "Id", "Name", Model.Vendor_Id), (Model.Id != 0 && Model.Status == "Complete") ?
                                        (object)new { disabled = "disabled", @class = "chosen-select form-control" } :
                                        (object)new { @class = "chosen-select form-control" }) <a data-next-stage="select" data-target-id="Industries_Id" data-select-all="selectunselect" href="javascript:void(0);">Select All</a>*@
                                    <div class="validmsgvendor"></div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                @if (Model.TacticType != null)
                                {
                                    if (Model.Id > 0 &&  Model.TacticType.Value > 0)
                                    {
                                        <label></label><br />
                                        <button id="btnDigital" onclick="return ftacticData();" data-target="#myModal" data-toggle="modal" type="button" class="btn btn-sm btn-info">Digital Touchpoint</button>
                                    }
                                }

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-12">
                                <label style="float:right!important;padding-right:77px">Benchmark
                                <span class="text-danger" style="font-size:smaller">   (At least one Reach and Response row is mandatory on submit)*</span>
                                </label>
                                </div>
                        </div>
                        <div class="row">
                            <div class="col-md-9" style="margin-left: 130px;margin-right: 150px" id="Met">
                                <table class="table table-condensed" id="tblBenchmark">
                                    <thead>
                                        <tr>
                                            <td><label>Pipeline Metric</label></td>
                                            <td><label>Metric</label></td>
                                            <td><label>Goal</label></td>
                                            <td><label>Low</label></td>
                                            <td><label>High</label></td>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @{ int iReachCount = 0; int iResponseCount = 0;}
                                        @for (int i = 0; i < Model.TacticCampaignReachResponseViewModels.Count(); i++)
                                        {
                                            if (Model.TacticCampaignReachResponseViewModels.ToList()[i].MetricType == "Reach")
                                            {
                                                iReachCount++;
                                                <tr class="@(iReachCount == 1 ? "trReach" : "")">
                                                    @Html.HiddenFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].MetricType, new { @Value = "Reach" })
                                                    @Html.HiddenFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].Id, new { @Value = Model.TacticCampaignReachResponseViewModels.ToList()[i].Id, @class = "hdnMetric" })
                                                    <td>
                                                        @if (iReachCount == 1)
                                                        {<label>Reach</label>}
                                                    </td>
                                                    <td>
                                                        @Html.DropDownListFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].MetricId, new SelectList(Model.MetricReachViewModels, "Id", "Name",
                                                Model.TacticCampaignReachResponseViewModels.ToList()[i].MetricId),
                                                Model.Id != 0 && Model.Status == "Complete" ?
                                                (object)new { disabled = "disabled", @class = "chosen-single form-control ddlMetricReach" } :
                                                (object)new { @class = "chosen-single form-control ddlMetricReach" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].Goal, (Model.Id != 0 && Model.Status == "Complete") ?
                                                (object)new { disabled = "disabled", @class = "form-control", @maxlength = "50" } :
                                                (object)new { @class = "form-control goal mrminttostring", @maxlength = "10", onkeypress = "numericvalidate(event)" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].Low, (Model.Id != 0 && Model.Status == "Complete") ?
                                                (object)new { disabled = "disabled", @class = "form-control", @maxlength = "50" } :
                                                (object)new { @class = "form-control low mrminttostring", @maxlength = "10", onkeypress = "numericvalidate(event)" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].High, (Model.Id != 0 && Model.Status == "Complete") ?
                                                (object)new { disabled = "disabled", @class = "form-control", @maxlength = "50" } :
                                                (object)new { @class = "form-control high mrminttostring", @maxlength = "10", onkeypress = "numericvalidate(event)" })
                                                    </td>

                                                    <td>
                                                        @if (iReachCount == 1)
                                                        {
                                                            <input type="button" Id="btnAddReachRow" name="Add Reach Row" value="+" class="btn btn-primary" title="Add New Row" disabled="@(Model.Status =="Complete" ? true : false)" />
                                                        }
                                                        else
                                                        {
                                                            <input type="button" id="btnRemoveReachRow" class="btn btn-primary btn-white removeRow" title="Remove Row" value="-" disabled="@(Model.Status == "Complete" ? true : false)" />
                                                        }

                                                        <span class="validmsgReachMetric"></span>
                                                    </td>

                                                </tr>
                                            }
                                        }
                                        @for (int i = 0; i < Model.TacticCampaignReachResponseViewModels.Count(); i++)
                                        {
                                            if (Model.TacticCampaignReachResponseViewModels.ToList()[i].MetricType == "Response")
                                            {
                                                iResponseCount++;
                                                <tr class="@(iResponseCount == 1 ? "trResponse" : "")">
                                                    @Html.HiddenFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].MetricType, new { @Value = "Response" })
                                                    @Html.HiddenFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].Id, new { @Value = Model.TacticCampaignReachResponseViewModels.ToList()[i].Id, @class = "hdnMetric" })
                                                    <td>
                                                        @if (iResponseCount == 1)
                                                        {<label>Response</label>}
                                                    </td>
                                                    <td>
                                                        @Html.DropDownListFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].MetricId, new SelectList(Model.MetricResponseViewModels, "Id", "Name",
                                                Model.TacticCampaignReachResponseViewModels.ToList()[i].MetricId),
                                                Model.Id != 0 && Model.Status == "Complete" ?
                                                (object)new { disabled = "disabled", @class = "chosen-single form-control ddlMetricResponse" } :
                                                (object)new { @class = "chosen-single form-control ddlMetricResponse" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].Goal, (Model.Id != 0 && Model.Status == "Complete") ?
                                                (object)new { disabled = "disabled", @class = "form-control", @maxlength = "50" } :
                                                (object)new { @class = "form-control goal mrminttostring", @maxlength = "10", onkeypress = "numericvalidate(event)" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].Low, (Model.Id != 0 && Model.Status == "Complete") ?
                                                (object)new { disabled = "disabled", @class = "form-control", @maxlength = "50" } :
                                                (object)new { @class = "form-control low mrminttostring", @maxlength = "10", onkeypress = "numericvalidate(event)" })
                                                    </td>
                                                    <td>
                                                        @Html.TextBoxFor(m => m.TacticCampaignReachResponseViewModels.ToList()[i].High, (Model.Id != 0 && Model.Status == "Complete") ?
                                                (object)new { disabled = "disabled", @class = "form-control", @maxlength = "50" } :
                                                (object)new { @class = "form-control high mrminttostring", @maxlength = "10", onkeypress = "numericvalidate(event)" })
                                                    </td>

                                                    <td>
                                                        @if (iResponseCount == 1)
                                                        {
                                                            <input type="button" Id="btnResponseRow" name="Add Response Row" value="+" class="btn btn-primary" title="Add New Row" disabled="@(Model.Status == "Complete" ? true : false)" />
                                                        }
                                                        else
                                                        {
                                                            <input type="button" id="btnRemoveResponseRow" class="btn btn-primary btn-white removeRow" title="Remove Row" value="-" disabled="@(Model.Status == "Complete" ? true : false)" />
                                                        }

                                                        <span class="validmsgResponseMetric"></span>
                                                    </td>

                                                </tr>
                                            }
                                        }
                                    </tbody>
                                </table>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6">

                            </div>
                            <div class="col-md-6" style="text-align: right">
                                @Model.StatusInheritaceStamp
                            </div>
                        </div>

                    </fieldset>
                    <fieldset>
                        <div class="form-group">
                            <div class="row " style="padding-top: 10px">
                                <div class="col-md-4"></div>
                                <div class="col-md-8">

                                    @if (Model.Id == 0)
                                    {
                                        <div class="col-md-3"><input type="button" class="btn btn-primary col-sm-12" value="Back" onclick="location.href = '@Url.Action("Index", "MasterCampaign")'" /></div>
                                    }
                                    else
                                    {
                                        <div class="col-md-3"><input type="button" class="btn btn-primary col-sm-12" value="Back" onclick="location.href = '@Url.Action("TacticCampaignList", "TacticCampaign")'" /></div>
                                    }
                                    @if (Model.Id != 0 && Model.Status == Status.Draft.ToString())
                                    {
                                        <div class="col-md-3">
                                            <input type="button" Id="btnDeleteTactic" name="button" value="Delete Draft" class="btn btn-primary col-sm-12" />
                                        </div>
                                    }
                                    @if (Model.Status != Status.Complete.ToString())
                                    {
                                        <div class="col-md-3">
                                            <input type="button" Id="btnSaveDrafttactic" name="button" value="Save Draft" class="btn btn-primary col-sm-12"/>
                                        </div>
                                        <div class="col-md-3">
                                            <input type="button" Id="btnSubmitTactic" name="button" value="Submit" class="btn btn-primary col-sm-12"/>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="col-md-3">
                                            <input type="button" Id="btnSubmitTactic" name="button" value="Update" class="btn btn-primary col-sm-12" />
                                        </div>
                                    }
                                   
                                   
                                </div>
                            </div>
                        </div>
                    </fieldset>
                </div>
                <!-- /.row -->
            </div>
            <!-- /.box-body -->
        </div>
    </section>
    <div class="modal fade" id="myModal" role="dialog" style="width:100%!important">
        @Html.Partial("tacticdigital")
    </div>
</form>
